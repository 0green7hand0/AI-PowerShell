[tool:pytest]
# Pytest configuration for AI PowerShell Assistant

# Test discovery
testpaths = src
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Minimum version
minversion = 7.0

# Add options
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --cov=src
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml:coverage.xml
    --cov-fail-under=90
    --durations=10
    --maxfail=5
    --disable-warnings

# Markers for test categorization
markers =
    unit: Unit tests for individual components
    integration: Integration tests for component interactions
    e2e: End-to-end tests for complete workflows
    security: Security and penetration tests
    performance: Performance and benchmark tests
    cross_platform: Cross-platform compatibility tests
    slow: Tests that take a long time to run
    network: Tests that require network access
    docker: Tests that require Docker
    admin: Tests that require administrative privileges
    windows: Tests specific to Windows platform
    linux: Tests specific to Linux platform
    macos: Tests specific to macOS platform
    regression: Regression tests for known issues
    smoke: Smoke tests for basic functionality

# Async test configuration
asyncio_mode = auto

# Test timeout (in seconds)
timeout = 300

# Parallel execution
# -n auto enables automatic worker detection
# Uncomment the line below to enable parallel execution
# addopts = -n auto

# Logging configuration
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

log_file = tests.log
log_file_level = DEBUG
log_file_format = %(asctime)s [%(levelname)8s] %(filename)s:%(lineno)d %(funcName)s(): %(message)s
log_file_date_format = %Y-%m-%d %H:%M:%S

# Filter warnings
filterwarnings =
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::ResourceWarning
    error::pytest.PytestUnraisableExceptionWarning

# Test collection
collect_ignore = [
    "setup.py",
    "conftest.py",
    "__pycache__",
    ".git",
    ".pytest_cache",
    "htmlcov",
    "build",
    "dist",
    "*.egg-info"
]

# JUnit XML output for CI/CD
junit_family = xunit2
junit_logging = system-out
junit_log_passing_tests = false

# Coverage configuration
[coverage:run]
source = src
omit = 
    */test_*.py
    */*_test.py
    */conftest.py
    */setup.py
    */__pycache__/*
    */.*
    */venv/*
    */env/*
    */build/*
    */dist/*

branch = true
parallel = true

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

ignore_errors = true
show_missing = true
precision = 2

[coverage:html]
directory = htmlcov
title = AI PowerShell Assistant Test Coverage

[coverage:xml]
output = coverage.xml