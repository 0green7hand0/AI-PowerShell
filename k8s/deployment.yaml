apiVersion: apps/v1
kind: Deployment
metadata:
  name: ai-powershell-assistant
  namespace: ai-powershell-assistant
  labels:
    app.kubernetes.io/name: ai-powershell-assistant
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/component: server
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: ai-powershell-assistant
      app.kubernetes.io/component: server
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ai-powershell-assistant
        app.kubernetes.io/component: server
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: ai-powershell-assistant
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
      - name: ai-powershell-assistant
        image: ai-powershell-assistant:latest
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8000
          protocol: TCP
        env:
        - name: POWERSHELL_ASSISTANT_ENV
          value: "production"
        - name: POWERSHELL_ASSISTANT_HOST
          value: "0.0.0.0"
        - name: POWERSHELL_ASSISTANT_PORT
          value: "8000"
        - name: POWERSHELL_ASSISTANT_LOG_LEVEL
          value: "INFO"
        - name: POWERSHELL_ASSISTANT_CONFIG_DIR
          value: "/app/config"
        - name: POWERSHELL_ASSISTANT_DATA_DIR
          value: "/app/data"
        - name: POWERSHELL_ASSISTANT_LOG_DIR
          value: "/app/logs"
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
            ephemeral-storage: "1Gi"
          limits:
            memory: "2Gi"
            cpu: "1000m"
            ephemeral-storage: "5Gi"
        volumeMounts:
        - name: config
          mountPath: /app/config
          readOnly: true
        - name: data
          mountPath: /app/data
        - name: logs
          mountPath: /app/logs
        - name: models
          mountPath: /app/models
        - name: tmp
          mountPath: /tmp
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 10
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
      volumes:
      - name: config
        configMap:
          name: ai-powershell-assistant-config
      - name: data
        persistentVolumeClaim:
          claimName: ai-powershell-assistant-data
      - name: logs
        persistentVolumeClaim:
          claimName: ai-powershell-assistant-logs
      - name: models
        persistentVolumeClaim:
          claimName: ai-powershell-assistant-models
      - name: tmp
        emptyDir:
          sizeLimit: 1Gi
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
      - key: "node.kubernetes.io/not-ready"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 300
      - key: "node.kubernetes.io/unreachable"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 300
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - ai-powershell-assistant
              topologyKey: kubernetes.io/hostname