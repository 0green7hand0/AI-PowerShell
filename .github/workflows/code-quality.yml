name: Code Quality

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  black:
    name: Black Code Formatter
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install black
      run: |
        python -m pip install --upgrade pip
        pip install black
    
    - name: Check formatting with black
      run: |
        black --check --diff --color src/ tests/
    
    - name: Show black version
      run: black --version

  flake8:
    name: Flake8 Linter
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install flake8
      run: |
        python -m pip install --upgrade pip
        pip install flake8 flake8-docstrings flake8-bugbear
    
    - name: Lint with flake8
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        flake8 src/ tests/ --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings
        flake8 src/ tests/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Show flake8 version
      run: flake8 --version

  mypy:
    name: MyPy Type Checker
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install mypy
        pip install -r requirements.txt
    
    - name: Type check with mypy
      run: |
        mypy src/ --ignore-missing-imports --no-strict-optional --pretty
    
    - name: Show mypy version
      run: mypy --version

  pylint:
    name: Pylint Code Analysis
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pylint
        pip install -r requirements.txt
    
    - name: Analyze with pylint
      run: |
        pylint src/ --exit-zero --max-line-length=127 --disable=C0111,R0903
    
    - name: Show pylint version
      run: pylint --version

  isort:
    name: Import Sorting Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install isort
      run: |
        python -m pip install --upgrade pip
        pip install isort
    
    - name: Check import sorting
      run: |
        isort --check-only --diff src/ tests/
    
    - name: Show isort version
      run: isort --version
